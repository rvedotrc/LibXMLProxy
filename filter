#!/usr/bin/perl -w
# vi: set ts=4 sw=4 :

use strict;
use MyModProxyFilter;

use Getopt::Long;

my $url = "file://test";
my $type = "text/html";
my $qs = "?xmldump=1";

require URI;
my %pnotes;
$pnotes{'XMLProxy_URIObj'} = URI->new($url);

GetOptions(
) or exit 1;

my $content = join "", <>;

use HTTP::Response;
my $resp = HTTP::Response->new(
	200,
	"OK",
	undef,
	$content,
);

$resp->content_type("text/html");

my $r = ApacheFake->new;

MyModProxyFilter::vRewriteResponse($r, $resp);

print $resp->as_string;

################################################################################
package Apache;
sub request { "ApacheFake" }
################################################################################

package ApacheFake;

sub new { $_[0] }

sub pnotes { $pnotes{$_[1]} }
sub args { wantarray ? split(/[\?&=]/, $qs) : $qs }

sub AUTOLOAD
{
	use Data::Dumper;
	print STDERR Data::Dumper->Dump([ $ApacheFake::AUTOLOAD, \@_ ],[ 'AUTOLOAD', '*_' ]);
}

sub log { "ApLog" }

################################################################################

package ApLog;
sub AUTOLOAD
{
	use Data::Dumper;
	print STDERR Data::Dumper->Dump([ $ApLog::AUTOLOAD, \@_ ],[ 'AUTOLOAD', '*_' ]);

}

# eof filter
